pipeline {
    agent any
    
    tools{
        maven 'M3'
    }

    stages {
        stage('git clone') {
            steps {
                git branch: 'main', url: 'https://github.com/Surajr123/Jenkin-CI-CD-Pipeline.git'
            }
        }
        
         stage('mvn bulid') {
            steps {
                // sh is used for linux and bat is used for windows system Windows Shell 
                //  powershell 'Write-Output "Hello, World!"'  // PowerShell script
                
                dir('C:/ProgramData/Jenkins/.jenkins/workspace/Pipeline Project/spring-boot-openAPI-main') {  // Ensure you're in the directory with the pom.xml
                    bat 'mvn clean install'
                }
                 
            }
        }
        
         stage('Docker Image') {
            steps {
                bat 'docker --version'
                dir('C:/ProgramData/Jenkins/.jenkins/workspace/Pipeline Project/spring-boot-openAPI-main'){
                     bat 'docker build -t course-service .'
                }

               // bat 'docker build -t course-service ./docker'
            }
        }
        
          stage('Deployment ') {
            steps {
            
                // dir('C:/ProgramData/Jenkins/.jenkins/workspace/Pipeline Project/spring-boot-openAPI-main'){
                //      bat 'docker build -t course-service .'
                // }
                
                bat 'docker stop course-servicec'
                bat 'docker rm course-servicec'
                bat 'docker run -d -p 8082:8080 --name course-servicec course-service'
            }
        }
    }
    
    post {
    always {
        script {
            def jobName = env.JOB_NAME
            def buildNumber = env.BUILD_NUMBER
            def pipelineStatus = currentBuild.result ?: 'UNKNOWN'
            def bannerColor = pipelineStatus.toUpperCase() == 'SUCCESS' ? 'green' : 'red'

            def body = """<html>
                            <body>
                                <div style="border: 4px solid ${bannerColor}; padding: 10px;">
                                    <h2>${jobName} Build ${buildNumber}</h2>
                                    <div style="background-color: ${bannerColor}; padding: 10px;">
                                        <h3 style="color: white;">Pipeline Status: ${pipelineStatus.toUpperCase()}</h3>
                                    </div> 
                                    <p>Check the <a href="${BUILD_URL}">console output</a>.</p>
                                </div>
                            </body>
                          </html>"""

            emailext(
                subject: "${jobName} - Build ${buildNumber} - ${pipelineStatus.toUpperCase()}",
                body: body,
                to: 'surajr9964@gmail.com',
                from: 'surajxworkz@gmail.com',
                // replyTo: 'surajxworkz@gmail.com',
                mimeType: 'text/html',
                attachmentsPattern: 'a.txt'
            )
        }
    }
}

  
}
